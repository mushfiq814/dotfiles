#!/bin/bash

# shellcheck source=/Users/mumahmud/.config/sketchybar/colors
source "$HOME/.config/sketchybar/colors"

CACHE="$HOME/.config/sketchybar/scripts/jira-curr-sprint"

SPRINT_NAME_KEY="t rex"
JIRA_URL="https://billsdev.atlassian.net"
JIRA_USERNAME="mumahmud@achieve.com"

get_sprint_with_jira_cli() {
  SPRINT=$(
    jira sprint list \
      --state active \
      --table --plain --no-headers \
      --columns name,end \
      | grep -i "t rex")
  TZ_FORMAT='%Y-%m-%d %H:%M:%S'
}

get_sprint_with_curl() {
  SPRINT=$(
  curl \
    --request GET \
    --url "$JIRA_URL/rest/agile/1.0/board/797/sprint?state=active" \
    --user "$JIRA_USERNAME:$JIRA_API_TOKEN" \
    | jq -r ".values.[] | select(.name | test(\"$SPRINT_NAME_KEY\"; \"i\")) | .name+\"\t\"+.endDate")
  TZ_FORMAT='%Y-%m-%dT%H:%M:%S.000Z'
}

get_sprint_issues_with_jira_cli() {
  SPRINT_ISSUES=$(
    jira issue list \
      --plain --no-headers \
      -a"$(jira me)" \
      -q"Sprint = '$SPRINT_NAME_FULL'" \
      -t~Sub-Task \
      --columns KEY,SUMMARY,STATUS,TYPE
  )
}

get_from_jira_api() {
  JIRA_API_TOKEN=$(cat "$HOME/.secrets/JIRA_API_TOKEN")
  export JIRA_API_TOKEN

  get_sprint_with_curl

  SPRINT_NAME_FULL=$(echo "$SPRINT" | cut -d $'\t' -f 1)
  SPRINT_NAME_SHORT=$(echo "$SPRINT_NAME_FULL" | grep -i "sprint \d\+" -o)
  SPRINT_END_DATE=$(echo "$SPRINT" | tr -s "\t" | cut -d $'\t' -f 2)


  ISSUES_ARRAY=$(echo "$SPRINT_ISSUES" | awk -F '[\t]\+' '{
    print "{ \"key\": \"" $1 "\", \
    \"summary\": \"" $2 "\", \
    \"status\": \"" $3 "\", \
    \"type\": \"" $4 "\" }"
  }' | jq --slurp '.')

  echo "{}" | jq -n \
    ".sprint_name_full=\"$SPRINT_NAME_FULL\"
    | .sprint_name_short=\"$SPRINT_NAME_SHORT\"
    | .sprint_end_date=\"$SPRINT_END_DATE\"
    | .timezone_format=\"$TZ_FORMAT\"
    | .issues=$ISSUES_ARRAY" > "$CACHE"
}

CACHED=$(cat "$CACHE" 2> /dev/null)

if [[ "$CACHED" == "" ]]; then
  # sketchybar -m --set "$NAME" label="fetching..."
  get_from_jira_api
  CACHED=$(cat "$CACHE" 2> /dev/null)
  # sketchybar -m --set "$NAME" label="parsing..."
fi

if [[ "$TZ_FORMAT" == "" ]]; then
  TZ_FORMAT=$(echo "$CACHED" | jq -r ".timezone_format")
fi

SPRINT_NAME_FULL=$(echo "$CACHED" | jq -r ".sprint_name_full")
SPRINT_NAME_SHORT=$(echo "$CACHED" | jq -r ".sprint_name_short")
SPRINT_END_DATE=$(echo "$CACHED" | jq -r ".sprint_end_date")
SPRINT_ISSUES=$(echo "$CACHED" | jq ".issues")
SPRINT_ISSUES_LENGTH=$(echo "$CACHED" | jq ".issues | length")

NOTIFY=""
if [[ "$SPRINT_NAME_SHORT" == "" ]]; then
  NOTIFY="No active sprints"
else
  # get sprint end and current timestamps
  CURR_TS=$(date +%s)
  END_TS=$(date -j -f "$TZ_FORMAT" "$SPRINT_END_DATE" +'%s')

  # calculate number of days
  DIFF=$(( (END_TS - CURR_TS) / (24 * 60 * 60) + 1 ))

  NOTIFY="$SPRINT_NAME_SHORT"

  if [[ $DIFF -eq 0 ]]; then
    NOTIFY="$NOTIFY 󰔛 ENDS TODAY"
  elif [[ $DIFF -lt 0 ]]; then
    NOTIFY="$NOTIFY 󰔛 $((DIFF * -1)) day(s) ago"
  else
    NOTIFY="$NOTIFY 󰔛 $DIFF day(s)"
  fi

  NOTIFY="$NOTIFY  $SPRINT_ISSUES_LENGTH"
fi

sketchybar -m \
  --set "$NAME" \
  label="$NOTIFY" \
  click_script="sketchybar -m --set \$NAME popup.drawing=toggle" \
  \
  popup.height=30 \
  popup.background.drawing=on \
  popup.background.border_width=2 \
  popup.background.color="0xff${BLACKTR:1}" \
  popup.background.border_color="0xff${GREY0:1}" \
  popup.background.corner_radius=10 \
  popup.blur_radius=50 \
  \
  --default \
    background.padding_left=15 \
    background.padding_right=10 \
    icon.padding_right=10

# add issues to popup
for i in $(seq 0 $((SPRINT_ISSUES_LENGTH - 1))); do
  key=$(echo "$SPRINT_ISSUES" | jq -r ".[$i] | .key")
  summary=$(echo "$SPRINT_ISSUES" | jq -r ".[$i] | .summary")

  type=$(echo "$SPRINT_ISSUES" | jq -r ".[$i] | .type")
  if [[ "$type" == "Story" ]]; then
    icon=""
    icon_color="0xff${GREEN0:1}"
  elif [[ "$type" == "Bug" ]]; then
    icon="󱗜"
    icon_color="0xff${RED0:1}"
  else
    icon=""
    icon_color="0xff${BLUE0:1}"
  fi

  status=$(echo "$SPRINT_ISSUES" | jq -r ".[$i] | .status")
  label_color="0xff${WHITE:1}"
  status_text=""
  if [[ "$status" == "Closed" ]]; then
    status_text="DONE"
    label_color="0xff${GREEN0:1}"
  elif [[ "$status" == "In Progress" ]]; then
    status_text="WIP "
    label_color="0xff${ORANGE1:1}"
  elif [[ "$status" == "Code Review" ]]; then
    status_text="PR  "
    label_color="0xff${PURPLE0:1}"
  elif [[ "$status" == "To Do" ]]; then
    status_text="TODO"
    label_color="0xff${GREY3:1}"
  else
    status_text="    "
    label_color="0xff${YELLOW0:1}"
  fi

  sketchybar \
    --add item "jira.issues.$i" "popup.$NAME" \
    --set "jira.issues.$i" \
      icon=$icon \
      icon.color="$icon_color" \
      label="$status_text $key: $summary" \
      label.color="$label_color" \
      click_script="sketchybar -m --set $NAME popup.drawing=off; open $JIRA_URL/browse/$key"
done

sketchybar \
  --add item "jira.issues.refresh" "popup.$NAME" \
  --set "jira.issues.refresh" \
    icon="" \
    icon.color="0xff${RED0:1}" \
    label="Refresh" \
    label.color="0xff${RED1:1}" \
    click_script="sketchybar -m --set $NAME popup.drawing=off; rm -rf \"$CACHE\" && osascript -e 'display notification \"cache deleted\" with title \"sketchybar\"'"

