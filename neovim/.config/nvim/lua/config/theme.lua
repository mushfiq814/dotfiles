local colorsFound, colors = pcall(require, "config/colors")
if not colorsFound then
  vim.notify("please generate colors file using the colorscheme script")
  return
end

local utils           = require("config/utils/color-utils")

vim.bo.syntax         = "ON"
vim.opt.termguicolors = true
vim.cmd("set background=" .. colors.mode)
if vim.fn.exists("syntax_on") then vim.cmd("syntax reset") end

-- Neovim LSP virtual diagnostics symbols
vim.cmd("sign define DiagnosticSignError text= texthl=LspDiagnosticsDefaultError       linehl= numhl=")
vim.cmd("sign define DiagnosticSignWarn  text= texthl=LspDiagnosticsDefaultWarning     linehl= numhl=")
vim.cmd("sign define DiagnosticSignInfo  text= texthl=LspDiagnosticsDefaultInformation linehl= numhl=")
vim.cmd("sign define DiagnosticSignHint  text= texthl=LspDiagnosticsDefaultHint        linehl= numhl=")

local sharedColors = {
  darkeraccent        = utils.darken(colors.accent, 0.1),
  darkerbg            = utils.darken(colors.black, 0.1),
  darkercursorline    = utils.darken(colors.grey0, 0.1),
  darkerstatusline    = utils.darken(colors.grey1, 0.1),
  mdCodeBlockBg       = nil,
  mdTitleDarkenFactor = 0.05,
  statusBg            = colors.grey0,
  statusFg            = colors.white,
  winbarBg            = colors.grey1,
  winbarFg            = colors.bright_green,
}

local highlights   = {

  -- Theme Color Highlights, used in plugin settings
  ColorBlack                               = { fg = colors.black },
  ColorWhite                               = { fg = colors.white },
  ColorRed                                 = { fg = colors.neutral_red },
  ColorYellow                              = { fg = colors.neutral_yellow },
  ColorOrange                              = { fg = colors.neutral_orange },
  ColorGreen                               = { fg = colors.neutral_green },
  ColorBlue                                = { fg = colors.neutral_blue },
  ColorAqua                                = { fg = colors.neutral_aqua },
  ColorPurple                              = { fg = colors.neutral_purple },

  -- Vim editor colors
  Bold                                     = { bold = true, },
  ColorColumn                              = { bg = colors.grey0, },
  Conceal                                  = { fg = colors.bright_orange, },
  Cursor                                   = { fg = colors.black, bg = colors.grey4, },
  CursorColumn                             = { bg = colors.grey0, },
  CursorLine                               = { bg = colors.grey0, },
  CursorLineNr                             = { fg = colors.grey3, bg = colors.grey0, },
  Debug                                    = { fg = colors.bright_red, },
  Directory                                = { fg = colors.bright_blue, },
  EndOfBuffer                              = { fg = colors.grey2, },
  Error                                    = { fg = colors.black, bg = colors.bright_red, bold = true, },
  ErrorMsg                                 = { fg = colors.bright_red, bg = colors.black, },
  Exception                                = { fg = colors.bright_red, },
  FoldColumn                               = { fg = colors.bright_aqua, bg = colors.black, },
  Folded                                   = { fg = colors.grey2, bg = colors.grey0, },
  IncSearch                                = { fg = colors.grey0, bg = colors.bright_orange, },
  Italic                                   = { standout = true },
  LineNr                                   = { fg = colors.grey3, },
  LineNrAbove                              = { fg = colors.grey4, },
  LineNrBelow                              = { fg = colors.grey4, },
  Macro                                    = { fg = colors.bright_red, },
  MatchParen                               = { bg = colors.grey2, },
  ModeMsg                                  = { fg = colors.bright_green, },
  MoreMsg                                  = { fg = colors.bright_green, },
  NonText                                  = { fg = colors.grey2, },
  Normal                                   = { fg = colors.grey4, },
  PMenu                                    = { fg = colors.grey4, bg = colors.grey0, },
  PMenuSel                                 = { fg = colors.grey0, bg = colors.grey4, },
  Question                                 = { fg = colors.bright_blue, },
  QuickFixLine                             = { bg = colors.grey0, },
  Search                                   = { fg = colors.grey0, bg = colors.bright_yellow, },
  SignColumn                               = { fg = colors.grey3, },
  SpecialKey                               = { fg = colors.grey2, },
  StatusLine                               = { fg = colors.grey4, bg = colors.grey1, },
  StatusLineNC                             = { fg = colors.grey3, bg = colors.grey0, },
  Substitute                               = { fg = colors.grey0, bg = colors.bright_yellow, },
  TabLine                                  = { fg = colors.grey2, bg = colors.grey0, },
  TabLineFill                              = { fg = colors.grey2, bg = colors.grey0, },
  TabLineSel                               = { fg = colors.bright_green, bg = colors.grey0, },
  Title                                    = { fg = colors.bright_blue, },
  TooLong                                  = { fg = colors.bright_red, },
  Underlined                               = { fg = colors.bright_red, },
  VertSplit                                = { fg = colors.grey2, },
  Visual                                   = { bg = colors.grey1, },
  VisualNOS                                = { fg = colors.bright_red, },
  WarningMsg                               = { fg = colors.bright_red, },
  WildMenu                                 = { fg = colors.bright_red, bg = colors.bright_yellow, },
  WinBar                                   = { fg = colors.grey4, },
  WinBarNC                                 = { fg = colors.grey3, },
  NormalFloat                              = { fg = colors.grey4, bg = sharedColors.darkerbg, },
  FloatBorder                              = { fg = colors.grey2, bg = sharedColors.darkerbg, },
  NormalNC                                 = { fg = colors.grey4, },
  TermCursor                               = { fg = colors.black, bg = colors.grey4, },
  TermCursorNC                             = { fg = colors.black, bg = colors.grey4, },

  -- Standard syntax highlights
  Boolean                                  = { fg = colors.bright_orange, },
  Character                                = { fg = colors.bright_red, },
  Comment                                  = { fg = colors.grey2, italic = true, },
  Conditional                              = { fg = colors.bright_purple, },
  Constant                                 = { fg = colors.bright_orange, },
  Define                                   = { fg = colors.bright_purple, },
  Delimiter                                = { fg = colors.faded_orange, },
  Float                                    = { fg = colors.bright_orange, bg = sharedColors.darkerbg, },
  Function                                 = { fg = colors.bright_blue, },
  Identifier                               = { fg = colors.bright_red, },
  Include                                  = { fg = colors.bright_blue, },
  Keyword                                  = { fg = colors.bright_purple, },
  Label                                    = { fg = colors.bright_yellow, },
  Number                                   = { fg = colors.bright_orange, },
  Operator                                 = { fg = colors.grey4, },
  PreProc                                  = { fg = colors.bright_yellow, },
  Repeat                                   = { fg = colors.bright_yellow, },
  Special                                  = { fg = colors.bright_aqua, },
  SpecialChar                              = { fg = colors.faded_orange, },
  Statement                                = { fg = colors.bright_red, },
  StorageClass                             = { fg = colors.bright_yellow, },
  String                                   = { fg = colors.bright_green, },
  Structure                                = { fg = colors.bright_purple, },
  Tag                                      = { fg = colors.bright_yellow, },
  Todo                                     = { fg = colors.bright_yellow, bg = colors.grey0, bold = true, },
  Type                                     = { fg = colors.bright_yellow, },
  Typedef                                  = { fg = colors.bright_yellow, },

  -- Diff
  DiffAdd                                  = { fg = colors.black, bg = colors.bright_green, },
  DiffChange                               = { fg = colors.grey2, bg = colors.bright_blue, },
  DiffDelete                               = { fg = colors.black, bg = colors.bright_red, },
  DiffText                                 = { fg = colors.black, bg = colors.neutral_blue, },
  DiffAdded                                = { fg = colors.bright_green, bg = colors.black, },
  DiffChanged                              = { fg = colors.bright_blue, bg = colors.black, },
  DiffFile                                 = { fg = colors.bright_red, bg = colors.black, },
  DiffNewFile                              = { fg = colors.bright_green, bg = colors.black, },
  DiffOldFile                              = { fg = colors.bright_red, bg = colors.black, },
  DiffLine                                 = { fg = colors.bright_blue, bg = colors.black, },
  DiffRemoved                              = { fg = colors.bright_red, bg = colors.black, },
  ["@text.diff.change"]                    = { fg = colors.neutral_blue, bold = true, },
  ["@text.diff.delete"]                    = { fg = colors.neutral_red, bold = true, },
  ["@text.diff.add"]                       = { fg = colors.neutral_green, bold = true, },
  ["@diff.delta"]                          = { link = "@text.diff.change" },
  ["@diff.minus"]                          = { link = "@text.diff.delete" },
  ["@diff.plus"]                           = { link = "@text.diff.add" },

  -- Git
  gitcommitOverflow                        = { fg = colors.bright_red, },
  gitcommitSummary                         = { fg = colors.bright_green, },
  gitcommitComment                         = { fg = colors.grey2, },
  gitcommitUntracked                       = { fg = colors.grey2, },
  gitcommitDiscarded                       = { fg = colors.grey2, },
  gitcommitSelected                        = { fg = colors.grey2, },
  gitcommitHeader                          = { fg = colors.bright_purple, },
  gitcommitSelectedType                    = { fg = colors.bright_blue, },
  gitcommitUnmergedType                    = { fg = colors.bright_blue, },
  gitcommitDiscardedType                   = { fg = colors.bright_blue, },
  gitcommitBranch                          = { fg = colors.bright_orange, bold = true, },
  gitcommitUntrackedFile                   = { fg = colors.bright_yellow, },
  gitcommitUnmergedFile                    = { fg = colors.bright_red, bold = true, },
  gitcommitDiscardedFile                   = { fg = colors.bright_red, bold = true, },
  gitcommitSelectedFile                    = { fg = colors.bright_green, bold = true, },

  -- GitGutter
  GitGutterAdd                             = { fg = colors.bright_green, bg = colors.black, },
  GitGutterChange                          = { fg = colors.bright_blue, bg = colors.black, },
  GitGutterDelete                          = { fg = colors.bright_red, bg = colors.black, },
  GitGutterChangeDelete                    = { fg = colors.bright_purple, bg = colors.black, },

  -- gitsigns
  GitSignsAdd                              = { fg = colors.bright_green, },
  GitSignsChange                           = { fg = colors.bright_aqua, },
  GitSignsDelete                           = { fg = colors.bright_red, },
  GitSignsChangeDelete                     = { fg = colors.bright_aqua, bg = colors.bright_red },

  -- Spelling
  SpellBad                                 = { undercurl = true, sp = colors.bright_red },
  SpellLocal                               = { undercurl = true, sp = colors.bright_aqua },
  SpellCap                                 = { undercurl = true, sp = colors.bright_blue },
  SpellRare                                = { undercurl = true, sp = colors.bright_purple },

  -- Diagnostics
  DiagnosticError                          = { fg = colors.bright_red, },
  DiagnosticWarn                           = { fg = colors.bright_yellow, },
  DiagnosticInfo                           = { fg = colors.bright_blue, },
  DiagnosticHint                           = { fg = colors.bright_aqua, },
  DiagnosticUnderlineError                 = { undercurl = true, sp = colors.bright_red },
  DiagnosticUnderlineWarning               = { undercurl = true, sp = colors.bright_purple },
  DiagnosticUnderlineWarn                  = { undercurl = true, sp = colors.bright_purple },
  DiagnosticUnderlineInformation           = { undercurl = true, sp = colors.faded_orange },
  DiagnosticUnderlineHint                  = { undercurl = true, sp = colors.bright_aqua },

  -- Language Server
  LspReferenceText                         = { underline = true, sp = colors.grey3 },
  LspReferenceRead                         = { underline = true, sp = colors.grey3 },
  LspReferenceWrite                        = { underline = true, sp = colors.grey3 },
  LspDiagnosticsDefaultError               = { fg = colors.bright_red, sp = colors.grey3 },    -- "DiagnosticError"
  LspDiagnosticsDefaultWarning             = { fg = colors.bright_yellow, sp = colors.grey3 }, -- "DiagnosticWarn"
  LspDiagnosticsDefaultInformation         = { fg = colors.bright_blue, sp = colors.grey3 },   -- "DiagnosticInfo"
  LspDiagnosticsDefaultHint                = { fg = colors.bright_aqua, sp = colors.grey3 },   -- "DiagnosticHint"
  LspDiagnosticsUnderlineError             = { link = "DiagnosticUnderlineError" },
  LspDiagnosticsUnderlineWarning           = { link = "DiagnosticUnderlineWarning" },
  LspDiagnosticsUnderlineInformation       = { link = "DiagnosticUnderlineInformation" },
  LspDiagnosticsUnderlineHint              = { link = "DiagnosticUnderlineHint" },

  -- Treesitter
  TSAnnotation                             = { fg = colors.faded_orange, },
  TSAttribute                              = { fg = colors.bright_yellow, },
  TSBoolean                                = { fg = colors.bright_orange, },
  TSCharacter                              = { fg = colors.bright_red, },
  TSComment                                = { fg = colors.grey2, standout = true, },
  TSConstructor                            = { fg = colors.bright_blue, },
  TSConditional                            = { fg = colors.bright_purple, },
  TSConstant                               = { fg = colors.bright_orange, },
  TSConstBuiltin                           = { fg = colors.bright_orange, standout = true, },
  TSConstMacro                             = { fg = colors.bright_red, },
  TSError                                  = { fg = colors.bright_red, },
  TSException                              = { fg = colors.bright_red, },
  TSField                                  = { fg = colors.grey4, },
  TSFloat                                  = { fg = colors.bright_orange, },
  TSFunction                               = { fg = colors.bright_blue, },
  TSFuncBuiltin                            = { fg = colors.bright_blue, standout = true, },
  TSFuncMacro                              = { fg = colors.bright_red, },
  TSInclude                                = { fg = colors.bright_blue, },
  TSKeyword                                = { fg = colors.bright_purple, },
  TSKeywordFunction                        = { fg = colors.bright_purple, },
  TSKeywordOperator                        = { fg = colors.bright_purple, },
  TSLabel                                  = { fg = colors.bright_yellow, },
  TSMethod                                 = { fg = colors.bright_blue, },
  TSNamespace                              = { fg = colors.bright_red, },
  TSNone                                   = { fg = colors.grey4, },
  TSNumber                                 = { fg = colors.bright_orange, },
  TSOperator                               = { fg = colors.grey4, },
  TSParameter                              = { fg = colors.grey4, },
  TSParameterReference                     = { fg = colors.grey4, },
  TSProperty                               = { fg = colors.grey4, },
  TSPunctDelimiter                         = { fg = colors.faded_orange, },
  TSPunctBracket                           = { fg = colors.grey4, },
  TSPunctSpecial                           = { fg = colors.grey4, },
  TSRepeat                                 = { fg = colors.bright_purple, },
  TSString                                 = { fg = colors.bright_green, },
  TSStringRegex                            = { fg = colors.bright_aqua, },
  TSStringEscape                           = { fg = colors.bright_aqua, },
  TSSymbol                                 = { fg = colors.bright_green, },
  TSTag                                    = { fg = colors.bright_yellow, },
  TSTagDelimiter                           = { fg = colors.faded_orange, },
  TSText                                   = { fg = colors.grey4, },
  TSStrong                                 = { bold = true, },
  TSEmphasis                               = { fg = colors.bright_orange, italic = true, },
  TSUnderline                              = { fg = colors.black, underline = true, },
  TSStrike                                 = { fg = colors.black, strikethrough = true, },
  TSTitle                                  = { fg = colors.bright_blue, },
  TSLiteral                                = { fg = colors.bright_orange, },
  TSURI                                    = { fg = colors.bright_orange, underline = true, },
  TSType                                   = { fg = colors.bright_yellow, },
  TSTypeBuiltin                            = { fg = colors.bright_yellow, standout = true, },
  TSVariable                               = { fg = colors.bright_red, },
  TSVariableBuiltin                        = { fg = colors.bright_red, standout = true, },
  TSDefinition                             = { underline = true, sp = colors.grey3 },
  TSDefinitionUsage                        = { underline = true, sp = colors.grey3 },
  TSCurrentScope                           = { bold = true, },
  TreesitterContext                        = { bg = colors.grey0, standout = true, },

  -- new treesitter highlights
  ["@function.method"]                     = { link = "@method" },
  ["@function.method.call"]                = { link = "@method.call" },
  ["@keyword.conditional"]                 = { link = "@conditional" },
  ["@keyword.debug"]                       = { link = "@debug" },
  ["@keyword.directive"]                   = { link = "@define" },
  ["@keyword.exception"]                   = { link = "@exception" },
  ["@keyword.import"]                      = { link = "@include" },
  ["@keyword.repeat"]                      = { link = "@repeat" },
  ["@keyword.storage"]                     = { link = "@storageclass" },
  ["@markup.environment"]                  = { link = "@text.environment" },
  ["@markup.environment.name"]             = { link = "@text.environment.name" },
  ["@markup.link.label"]                   = { link = "@string.special" },
  ["@markup.list"]                         = { link = "@punctuation.special" },
  ["@markup.math"]                         = { link = "@text.math" },
  ["@module"]                              = { link = "@namespace" },
  ["@number.float"]                        = { link = "@float" },
  ["@string.regexp"]                       = { link = "@string.regex" },
  ["@string.special.symbol"]               = { link = "@symbol" },
  ["@variable.member"]                     = { link = "@field" },
  ["@variable.parameter"]                  = { link = "@parameter" },

  -- treesitter markdown
  ["@text.title.1"]                        = { fg = utils.darken(colors.bright_aqua, sharedColors.mdTitleDarkenFactor * 0), bg = nil, bold = true },
  ["@text.title.2"]                        = { fg = utils.darken(colors.bright_aqua, sharedColors.mdTitleDarkenFactor * 1), bg = nil, bold = true },
  ["@text.title.3"]                        = { fg = utils.darken(colors.bright_aqua, sharedColors.mdTitleDarkenFactor * 2), bg = nil, bold = true },
  ["@text.title.4"]                        = { fg = utils.darken(colors.bright_aqua, sharedColors.mdTitleDarkenFactor * 3), bg = nil, bold = true },
  ["@text.title.5"]                        = { fg = utils.darken(colors.bright_aqua, sharedColors.mdTitleDarkenFactor * 4), bg = nil, bold = true },
  ["@text.title.6"]                        = { fg = utils.darken(colors.bright_aqua, sharedColors.mdTitleDarkenFactor * 5), bg = nil, bold = true },
  ["@markup.heading"]                      = { link = "@text.title" },
  ["@markup.heading.1.markdown"]           = { link = "@text.title.1" },
  ["@markup.heading.2.markdown"]           = { link = "@text.title.2" },
  ["@markup.heading.3.markdown"]           = { link = "@text.title.3" },
  ["@markup.heading.4.markdown"]           = { link = "@text.title.4" },
  ["@markup.heading.5.markdown"]           = { link = "@text.title.5" },
  ["@markup.heading.6.markdown"]           = { link = "@text.title.6" },
  ["@text.title.1.marker"]                 = { fg = colors.grey3, bold = true, },
  ["@text.title.2.marker"]                 = { fg = colors.grey3, bold = true, },
  ["@text.title.3.marker"]                 = { fg = colors.grey3, bold = true, },
  ["@text.title.4.marker"]                 = { fg = colors.grey3, bold = true, },
  ["@text.title.5.marker"]                 = { fg = colors.grey3, bold = true, },
  ["@text.title.6.marker"]                 = { fg = colors.grey3, bold = true, },
  ["@text.reference"]                      = { fg = colors.bright_purple, },
  ["@markup.link"]                         = { link = "@text.reference" },
  ["@text.literal"]                        = { fg = colors.bright_purple, },
  ["@markup.raw"]                          = { link = "@text.literal" },
  ["@markup.raw.block"]                    = { link = "@text.literal.block" },
  ["@text.uri"]                            = { fg = colors.bright_blue, },
  ["@markup.link.url"]                     = { link = "@text.uri" },
  ["@string.special.url"]                  = { link = "@text.uri" },
  ["@text.strike"]                         = { fg = sharedColors.darkeraccent, strikethrough = true, },
  ["@markup.strikethrough"]                = { link = "@text.strike" },
  ["@text.strong"]                         = { fg = sharedColors.darkeraccent, bold = true, },
  ["@markup.strong"]                       = { link = "@text.strong" },
  ["@text.emphasis"]                       = { fg = sharedColors.darkeraccent, italic = true, },
  ["@markup.italic"]                       = { link = "@text.emphasis" },
  ["@text.quote"]                          = { fg = sharedColors.darkeraccent, bg = colors.grey0, italic = true, },
  ["@markup.quote"]                        = { link = "@text.quote" },
  ["@markup.underline"]                    = { link = "@text.underline" }, -- note: some are changed to @string.special
  ["@markdown_check_undone"]               = { fg = colors.bright_yellow, },
  ["@markdown_check_done"]                 = { fg = colors.bright_green, },
  ["@markdown_list_marker"]                = { fg = sharedColors.darkeraccent, },
  ["@none"]                                = { fg = colors.bright_yellow, },
  ["@punctuation.bracket"]                 = { fg = sharedColors.darkeraccent, },
  ["@punctuation.delimiter"]               = { fg = colors.grey4, },
  ["@punctuation.special"]                 = { fg = sharedColors.darkeraccent, },
  ["@puntuation.strikethrough"]            = { fg = sharedColors.darkeraccent, strikethrough = true, },
  ["@markdown_quote_marker"]               = { fg = sharedColors.darkeraccent, bg = colors.grey0, },
  ["@markdown_code_block_marker"]          = { fg = colors.bright_yellow, bg = sharedColors.mdCodeBlockBg, bold = true, },
  ["@markdown_code_block_lang_javascript"] = { fg = colors.bright_yellow, bg = sharedColors.mdCodeBlockBg, bold = true, },
  ["@markdown_code_block_lang_typescript"] = { fg = colors.bright_blue, bg = sharedColors.mdCodeBlockBg, bold = true, },
  ["@markdown_code_block_lang_lua"]        = { fg = colors.bright_purple, bg = sharedColors.mdCodeBlockBg, bold = true, },
  ["@markdown_code_block_lang_bash"]       = { fg = colors.bright_green, bg = sharedColors.mdCodeBlockBg, bold = true, },
  ["@markdown_code_block_lang_json"]       = { fg = colors.bright_orange, bg = sharedColors.mdCodeBlockBg, bold = true, },
  ["@markdown_code_block_lang_diff"]       = { fg = colors.bright_red, bg = sharedColors.mdCodeBlockBg, bold = true, },
  ["@markdown_code_block_lang_vim"]        = { fg = colors.bright_aqua, bg = sharedColors.mdCodeBlockBg, bold = true, },
  ["@markdown_code_block_lang_yaml"]       = { fg = colors.bright_orange, bg = sharedColors.mdCodeBlockBg, bold = true, },
  ["@markdown_code_block_lang_java"]       = { fg = colors.bright_blue, bg = sharedColors.mdCodeBlockBg, bold = true, },
  ["@markdown_code_block_lang_html"]       = { fg = colors.bright_purple, bg = colors.grey0, bold = true, },
  ["@markdown_code_block_lang_css"]        = { fg = colors.bright_blue, bg = colors.grey0, bold = true, },
  ["@markdown_code_block_lang_sql"]        = { fg = colors.bright_yellow, bg = colors.grey0, bold = true, },
  -- unlink todo checkbox highlights
  ["@text.todo.checked.markdown"]          = {},
  ["@text.todo.unchecked.markdown"]        = {},

  -- treesitter comments
  ["@text.todo"]                           = { fg = colors.black, bg = colors.bright_yellow, bold = true, },
  ["@text.note"]                           = { fg = colors.black, bg = colors.bright_aqua, bold = true, },
  ["@text.danger"]                         = { fg = colors.black, bg = colors.bright_red, bold = true, },
  ["@text.warning"]                        = { fg = colors.black, bg = colors.bright_orange, bold = true, },
  ["@comment.error"]                       = { link = "@text.danger" },
  ["@comment.hint"]                        = { link = "@text.note" },
  ["@comment.info"]                        = { link = "@text.note" },
  ["@comment.note"]                        = { link = "@text.note" },
  ["@comment.ok"]                          = { link = "@text.note" },
  ["@comment.todo"]                        = { link = "@text.todo" },
  ["@comment.warning"]                     = { link = "@text.warning" },

  -- TODO: find out
  NvimInternalError                        = { fg = colors.black, bg = colors.bright_red, },
  User1                                    = { fg = colors.bright_red, bg = colors.grey1, },
  User2                                    = { fg = colors.bright_purple, bg = colors.grey1, },
  User3                                    = { fg = colors.grey4, bg = colors.grey1, },
  User4                                    = { fg = colors.bright_aqua, bg = colors.grey1, },
  User5                                    = { fg = colors.grey4, bg = colors.grey1, },
  User6                                    = { fg = colors.grey4, bg = colors.grey0, },
  User7                                    = { fg = colors.grey4, bg = colors.grey1, },
  User8                                    = { fg = colors.black, bg = colors.grey1, },
  User9                                    = { fg = colors.black, bg = colors.grey1, },

  -- telescope
  TelescopeBorder                          = { link = "FloatBorder" },
  TelescopePromptBorder                    = { link = "FloatBorder" },
  TelescopePromptNormal                    = { fg = colors.grey4, bg = sharedColors.darkerbg, },
  TelescopePromptPrefix                    = { fg = colors.bright_red, bg = sharedColors.darkerbg, },
  TelescopeNormal                          = { bg = sharedColors.darkerbg, },
  TelescopePreviewTitle                    = { fg = sharedColors.darkercursorline, bg = colors.bright_green, bold = true, },
  TelescopePromptTitle                     = { fg = sharedColors.darkercursorline, bg = colors.bright_red, bold = true, },
  TelescopeResultsTitle                    = { fg = sharedColors.darkerbg, bg = sharedColors.darkerbg, bold = true, },
  TelescopeSelection                       = { bg = sharedColors.darkerstatusline, },
  TelescopePreviewLine                     = { bg = colors.grey1, },

  -- nvim-notify
  NotifyDEBUGBody                          = { link = "Float" },
  NotifyDEBUGBorder                        = { link = "FloatBorder" },
  NotifyDEBUGIcon                          = { fg = colors.bright_aqua, bg = sharedColors.darkerbg, },
  NotifyDEBUGTitle                         = { fg = colors.bright_aqua, bg = sharedColors.darkerbg, bold = true, },
  NotifyERRORBody                          = { link = "Float" },
  NotifyERRORBorder                        = { link = "FloatBorder" },
  NotifyERRORIcon                          = { fg = colors.bright_red, bg = sharedColors.darkerbg, },
  NotifyERRORTitle                         = { fg = colors.bright_red, bg = sharedColors.darkerbg, bold = true, },
  NotifyINFOBody                           = { link = "Float" },
  NotifyINFOBorder                         = { link = "FloatBorder" },
  NotifyINFOIcon                           = { fg = colors.bright_green, bg = sharedColors.darkerbg, },
  NotifyINFOTitle                          = { fg = colors.bright_green, bg = sharedColors.darkerbg, bold = true, },
  NotifyTRACEBody                          = { link = "Float" },
  NotifyTRACEBorder                        = { link = "FloatBorder" },
  NotifyTRACEIcon                          = { fg = colors.bright_aqua, bg = sharedColors.darkerbg, },
  NotifyTRACETitle                         = { fg = colors.bright_aqua, bg = sharedColors.darkerbg, bold = true, },
  NotifyWARNBody                           = { link = "Float" },
  NotifyWARNBorder                         = { link = "FloatBorder" },
  NotifyWARNIcon                           = { fg = colors.bright_purple, bg = sharedColors.darkerbg, },
  NotifyWARNTitle                          = { fg = colors.bright_purple, bg = sharedColors.darkerbg, bold = true, },
  NotifyBackground                         = { fg = colors.bright_aqua, bg = sharedColors.darkerbg, },

  -- indentblankline
  IndentBlanklineChar                      = { fg = colors.grey1, nocombine = true, },
  IndentBlanklineContextChar               = { fg = colors.grey3, nocombine = true, },
  IndentBlanklineSpaceChar                 = { fg = colors.grey2, nocombine = true, },
  IndentBlanklineSpaceCharBlankline        = { fg = colors.white, nocombine = true, },

  -- nvim-cmp
  CmpDocumentationBorder                   = { fg = colors.grey4, bg = colors.black, },
  CmpDocumentation                         = { fg = colors.grey4, bg = colors.black, },
  CmpItemAbbr                              = { fg = colors.grey4, bg = colors.grey0, },
  CmpItemAbbrDeprecated                    = { fg = colors.grey2, strikethrough = true, },
  CmpItemAbbrMatch                         = { fg = colors.bright_blue, },
  CmpItemAbbrMatchFuzzy                    = { fg = colors.bright_blue, },
  CmpItemKindDefault                       = { fg = colors.grey4, },
  CmpItemMenu                              = { fg = colors.grey3, },
  CmpItemKindKeyword                       = { fg = colors.black, bg = colors.bright_purple, },
  CmpItemKindVariable                      = { fg = colors.black, bg = colors.bright_red, },
  CmpItemKindConstant                      = { fg = colors.black, bg = colors.bright_orange, },
  CmpItemKindReference                     = { fg = colors.black, bg = colors.bright_red, },
  CmpItemKindValue                         = { fg = colors.black, bg = colors.bright_orange, },
  CmpItemKindFunction                      = { fg = colors.black, bg = colors.bright_blue, },
  CmpItemKindMethod                        = { fg = colors.black, bg = colors.bright_blue, },
  CmpItemKindConstructor                   = { fg = colors.black, bg = colors.bright_blue, },
  CmpItemKindClass                         = { fg = colors.black, bg = colors.bright_yellow, },
  CmpItemKindInterface                     = { fg = colors.black, bg = colors.bright_yellow, },
  CmpItemKindStruct                        = { fg = colors.black, bg = colors.bright_yellow, },
  CmpItemKindEvent                         = { fg = colors.black, bg = colors.bright_yellow, },
  CmpItemKindEnum                          = { fg = colors.black, bg = colors.bright_yellow, },
  CmpItemKindUnit                          = { fg = colors.black, bg = colors.bright_yellow, },
  CmpItemKindModule                        = { fg = colors.black, bg = colors.grey4, },
  CmpItemKindProperty                      = { fg = colors.black, bg = colors.bright_red, },
  CmpItemKindField                         = { fg = colors.black, bg = colors.bright_red, },
  CmpItemKindTypeParameter                 = { fg = colors.black, bg = colors.bright_yellow, },
  CmpItemKindText                          = { fg = colors.black, bg = colors.bright_green, },
  CmpItemKindEnumMember                    = { fg = colors.black, bg = colors.bright_yellow, },
  CmpItemKindOperator                      = { fg = colors.black, bg = colors.grey4, },
  CmpItemKindSnippet                       = { fg = colors.black, bg = colors.grey3, },
  CmpItemKindColor                         = { fg = colors.black, bg = colors.bright_blue, },
  CmpItemKindFile                          = { fg = colors.black, bg = colors.bright_purple, },
  CmpItemKindFolder                        = { fg = colors.black, bg = colors.bright_yellow, },

  -- checkhealth
  healthSuccess                            = { fg = colors.neutral_aqua, bold = true, },
  healthHelp                               = { fg = colors.faded_blue, bold = true, },
  healthError                              = { fg = colors.bright_red, bold = true, },
  healthWarning                            = { fg = colors.bright_orange, bold = true, },

  -- winbar
  winbarFileName                           = { fg = colors.black, bg = colors.accent, bold = true, },
  winbarFileNameModified                   = { fg = colors.black, bg = colors.neutral_aqua, },
  winbarTags                               = { bg = sharedColors.winbarBg, fg = colors.white },
  NavicText                                = { bg = sharedColors.winbarBg, fg = colors.white },
  NavicSeparator                           = { bg = sharedColors.winbarBg, fg = colors.bright_orange },
  NavicIconsArray                          = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsBoolean                        = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsClass                          = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsConstant                       = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsConstructor                    = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsEnum                           = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsEnumMember                     = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsEvent                          = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsField                          = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsFile                           = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsFunction                       = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsInterface                      = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsKey                            = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsMethod                         = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsModule                         = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsNamespace                      = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsNull                           = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsNumber                         = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsObject                         = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsOperator                       = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsPackage                        = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsProperty                       = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsString                         = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsStruct                         = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsTypeParameter                  = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },
  NavicIconsVariable                       = { bg = sharedColors.winbarBg, fg = sharedColors.winbarFg },

  -- statusline
  statusLineModeNormal                     = { fg = colors.grey0, bg = colors.bright_aqua, bold = true },
  statusLineModeInsert                     = { fg = colors.grey0, bg = colors.bright_blue, bold = true, },
  statusLineModeVisual                     = { fg = colors.grey0, bg = colors.bright_orange, bold = true, },
  statusLineModeCommand                    = { fg = colors.grey0, bg = colors.bright_yellow, bold = true, },
  statusLineModeTerminal                   = { fg = colors.grey0, bg = colors.bright_purple, bold = true, },
  statusLineTabNormal                      = { fg = sharedColors.statusFg, bg = sharedColors.statusBg, },
  statuslineTabActive                      = { fg = sharedColors.statusBg, bg = colors.accent, },
  statuslineTabInactive                    = { fg = colors.white, bg = colors.grey2, },
  statusLineBranch                         = { fg = sharedColors.statusFg, bg = sharedColors.statusBg, bold = true, },
  statusLineCwd                            = { fg = colors.bright_blue, bg = sharedColors.statusBg, },
  statusLineFileName                       = { fg = colors.bright_aqua, bg = sharedColors.statusBg, },
  statusLineFileNameModified               = { fg = colors.bright_red, bg = sharedColors.statusBg, },
  statusLineSpacer                         = { fg = sharedColors.statusFg, bg = sharedColors.statusBg, },
  statusLineDiagnosticsError               = { fg = colors.bright_red, bg = sharedColors.statusBg, },
  statusLineDiagnosticsWarning             = { fg = colors.bright_yellow, bg = sharedColors.statusBg, },
  statusLineDiagnosticsInfo                = { bg = sharedColors.statusBg, fg = colors.bright_aqua, },
  statusLineLspClient                      = { bg = sharedColors.statusBg, fg = colors.bright_orange, },
  statusLineFileType                       = { fg = sharedColors.statusFg, bg = sharedColors.statusBg, },
  statusLineProgress                       = { bg = colors.bright_yellow, fg = colors.grey3, },
  statusLineRowCol                         = { fg = colors.bright_aqua, bg = sharedColors.statusBg, bold = true, },
  flagBlue                                 = { fg = colors.grey0, bg = colors.neutral_blue, bold = true, },
  flagYellow                               = { fg = colors.grey0, bg = colors.neutral_yellow, bold = true, },
  flagOrange                               = { fg = colors.grey0, bg = colors.neutral_orange, bold = true, },
  flagRed                                  = { fg = colors.grey0, bg = colors.neutral_red, bold = true, },
  statusLineFileTypeIcon                   = { bg = sharedColors.statusBg },

  -- nvimtree
  NvimTreeBookmark                         = { fg = colors.bright_red },
  NvimTreeExecFile                         = { fg = colors.bright_red, bold = true, },
  NvimTreeFileIcon                         = {},
  NvimTreeFolderIcon                       = { fg = colors.bright_blue },
  NvimTreeGitDeleted                       = { fg = colors.bright_purple },
  NvimTreeGitDirty                         = { fg = colors.bright_purple },
  NvimTreeGitMerge                         = { fg = colors.bright_orange },
  NvimTreeGitNew                           = { fg = colors.bright_yellow },
  NvimTreeGitRenamed                       = { fg = colors.bright_purple },
  NvimTreeGitStaged                        = { fg = colors.bright_red },
  NvimTreeImageFile                        = { fg = colors.bright_purple, bold = true, },
  NvimTreeIndentMarker                     = { fg = colors.bright_blue },
  NvimTreeLiveFilterPrefix                 = { fg = colors.bright_purple, bold = true, },
  NvimTreeLiveFilterValue                  = { bold = true, },
  NvimTreeModifiedFile                     = { fg = colors.bright_red },
  NvimTreeOpenedFile                       = { fg = colors.bright_red, bold = true, },
  NvimTreeRootFolder                       = { fg = colors.bright_purple },
  NvimTreeSpecialFile                      = { fg = colors.bright_yellow, bold = true, },
  NvimTreeSymlink                          = { fg = colors.bright_purple, bold = true, },
  NvimTreeSymlinkIcon                      = {},
  NvimTreeWindowPicker                     = { fg = colors.white, bg = colors.neutral_blue, bold = true, },
}

-- apply highlights
for k, v in pairs(highlights) do
  utils.highlight(k, v)
end

-- FIXME SignColumn highlight by itself retains the background color for some reason
vim.cmd("hi! SignColumn guibg=None")
