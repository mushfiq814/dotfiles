#!/bin/sh

# paths for config files
APPNAME="colorscheme script"
COLORS_DIR="$HOME/dotfiles/scripts/colorscheme/colors"
COLORS_FILES="$COLORS_DIR/*.json"
UTILS_FILE="$HOME/dotfiles/scripts/colorscheme/utils"
KITTY_COLORS_FILE="$HOME/.config/kitty/colors.conf"
KITTY_FONT_FILE="$HOME/.config/kitty/font.conf"
POLYBAR_COLORS_FILE="$HOME/.config/polybar/colors"
POLYBAR_FONT_FILE="$HOME/.config/polybar/font"
SKETCHYBAR_COLORS_FILE="$HOME/.config/sketchybar/colors"
SKETCHYBAR_FONT_FILE="$HOME/.config/sketchybar/font"
I3_COLORS_FILE="$HOME/.config/i3/colors"
I3_FONT_FILE="$HOME/.config/i3/font"
YABAI_COLORS_FILE="$HOME/.config/yabai/colors"
NVIM_COLORS_FILE="$HOME/.config/nvim/lua/config/colors.lua"
ROFI_COLORS_FILE="$HOME/.config/rofi/colors.rasi"
ROFI_FONT_FILE="$HOME/.config/rofi/font.rasi"
QUTEBROWSER_COLORS_FILE="$HOME/.config/qutebrowser/colors.py"
QUTEBROWSER_FONT_FILE="$HOME/.config/qutebrowser/font.py"
RAZERKBD_COLORS_FILE="$HOME/.config/razerkbd/colors.py"
ITERM_CONFIG_BASE_FILE="/Library/Application Support/iTerm2/DynamicProfiles/profile_base.json"
ITERM_CONFIG_FILE="/Library/Application Support/iTerm2/DynamicProfiles/profile.json"
DUNST_COLORS_FILE="$HOME/.config/dunst/dunstrc.d/colors.conf"
DUNST_FONT_FILE="$HOME/.config/dunst/dunstrc.d/font.conf"
XBORDERS_CONFIG_FILE="$HOME/.config/xborders/xborders.json"

# source env file
source $HOME/dotfiles/.env

notify () {
  UNAME=$(uname -s)
  if [ $UNAME = "Darwin" ]; then
    osascript -e "display notification \"$2\" with title \"$1\""
  else
    notify-send -a "$1" "$2"
  fi
}

quit_on_error () {
  # if there was an error in the last command, quit
  if [ $? != 0 ]; then
    # if argument with message was passed in, send notification
    if [ $# != 0 ]; then
      notify "$APPNAME" "$1"
    fi
    exit 1
  fi
}

quit_on_file_dne () {
  # if no argument with filepath was passed in, quit
  if [ $# = 0 ]; then
    notify "$APPNAME" "\`quit_on_file_dne\` called without argument! Exiting..."
    exit 1
  fi
  if [ ! -e "$1" ]; then
    notify "$APPNAME" "$1 was not found. Exiting..."
    exit 1
  fi
}

# show list of available colorschemes and accents
quit_on_file_dne $COLORS_FILES
THEME=$(for file in $COLORS_FILES; do
  basename $file .json;
done | rofi -dmenu)
quit_on_error "Error with selecting colorscheme. Aborting..."
# ACCENT_KEY="neutral_$(echo "red\ngreen\nyellow\nblue\npurple\naqua\norange" | rofi -dmenu)"
ACCENT_KEY="neutral_orange"
quit_on_error "Error with selecting accent color. Aborting..."

# get colors from desired colorscheme
COLORS=$(cat $COLORS_DIR/$THEME.json)
quit_on_error "colors file for $THEME not found! Aborting..."

# store values
# TODO: find more efficient/readable way to do this
MODE=$(echo "$COLORS" | jq -r ".mode")
ACCENT=$(echo "$COLORS" | jq -r ".$ACCENT_KEY")
BLACK=$(echo "$COLORS" | jq -r ".black")
GREY0=$(echo "$COLORS" | jq -r ".grey0")
GREY1=$(echo "$COLORS" | jq -r ".grey1")
GREY2=$(echo "$COLORS" | jq -r ".grey2")
GREY3=$(echo "$COLORS" | jq -r ".grey3")
GREY4=$(echo "$COLORS" | jq -r ".grey4")
GREY5=$(echo "$COLORS" | jq -r ".grey5")
WHITE=$(echo "$COLORS" | jq -r ".white")
BRIGHT_RED=$(echo "$COLORS" | jq -r ".bright_red")
NEUTRAL_RED=$(echo "$COLORS" | jq -r ".neutral_red")
FADED_RED=$(echo "$COLORS" | jq -r ".faded_red")
BRIGHT_GREEN=$(echo "$COLORS" | jq -r ".bright_green")
NEUTRAL_GREEN=$(echo "$COLORS" | jq -r ".neutral_green")
FADED_GREEN=$(echo "$COLORS" | jq -r ".faded_green")
BRIGHT_YELLOW=$(echo "$COLORS" | jq -r ".bright_yellow")
NEUTRAL_YELLOW=$(echo "$COLORS" | jq -r ".neutral_yellow")
FADED_YELLOW=$(echo "$COLORS" | jq -r ".faded_yellow")
BRIGHT_BLUE=$(echo "$COLORS" | jq -r ".bright_blue")
NEUTRAL_BLUE=$(echo "$COLORS" | jq -r ".neutral_blue")
FADED_BLUE=$(echo "$COLORS" | jq -r ".faded_blue")
BRIGHT_PURPLE=$(echo "$COLORS" | jq -r ".bright_purple")
NEUTRAL_PURPLE=$(echo "$COLORS" | jq -r ".neutral_purple")
FADED_PURPLE=$(echo "$COLORS" | jq -r ".faded_purple")
BRIGHT_AQUA=$(echo "$COLORS" | jq -r ".bright_aqua")
NEUTRAL_AQUA=$(echo "$COLORS" | jq -r ".neutral_aqua")
FADED_AQUA=$(echo "$COLORS" | jq -r ".faded_aqua")
BRIGHT_ORANGE=$(echo "$COLORS" | jq -r ".bright_orange")
NEUTRAL_ORANGE=$(echo "$COLORS" | jq -r ".neutral_orange")
FADED_ORANGE=$(echo "$COLORS" | jq -r ".faded_orange")

# get transparent black color in AARRGGBB format
BLACK_TR="${BLACK:1}"
if [ $MODE = "light" ]; then
  # less transparent for light theme
  BLACK_TR="#DD$BLACK_TR"
else
  BLACK_TR="#99$BLACK_TR"
fi

# background opacity
if [ $MODE = "light" ]; then
  OPACITY="0.9"
else
  OPACITY="0.4"
fi

echo "COLORSCHEME: theme $THEME ($MODE) with accent: $ACCENT"
# TODO: add check for all color values to exist

# dunst: set colors
DUNST_CONFIG_DIR=$(dirname $DUNST_COLORS_FILE)
if [[ ! -d $DUNST_CONFIG_DIR ]]; then mkdir -p $DUNST_CONFIG_DIR; fi

echo "COLORSCHEME: setting dunst colors"
cat << EOF > $DUNST_COLORS_FILE
[global]
    highlight = "$ACCENT"
    frame_color = "$ACCENT"

[urgency_low]
    background = "$BLACK"
    foreground = "$WHITE"

[urgency_normal]
    background = "$BLACK"
    foreground = "$WHITE"

[urgency_critical]
    background = "$BRIGHT_RED"
    foreground = "$WHITE"

# vim:ft=cfg
EOF

echo "COLORSCHEME: setting dunst font"
cat << EOF > $DUNST_FONT_FILE
[global]
    font = $DUNST_FONT

# vim:ft=cfg
EOF

# xborders: set config file
echo "COLORSCHEME: setting xborders colors"
echo $(
  cat $XBORDERS_CONFIG_FILE \
  | jq ".[\"border-rgba\"] = \"${ACCENT}ff\"") \
  > $XBORDERS_CONFIG_FILE

# kitty: set colors file
echo "COLORSCHEME: setting kitty colors"
# NOTE: remember to include $KITTY_COLORS_FILE in kitty config file
cat << EOF > $KITTY_COLORS_FILE
# theme: $THEME
foreground $WHITE
background $BLACK
color0     $BLACK
color8     $GREY1
color1     $BRIGHT_RED
color9     $NEUTRAL_RED
color2     $BRIGHT_GREEN
color10    $NEUTRAL_GREEN
color3     $BRIGHT_YELLOW
color11    $NEUTRAL_YELLOW
color4     $BRIGHT_BLUE
color12    $NEUTRAL_BLUE
color5     $BRIGHT_PURPLE
color13    $NEUTRAL_PURPLE
color6     $BRIGHT_AQUA
color14    $NEUTRAL_AQUA
color7     $GREY3
color15    $WHITE

url_color  $ACCENT

selection_foreground $BLACK
selection_background $WHITE
cursor $WHITE
cursor_text_color $BLACK

background_opacity $OPACITY
dim_opacity 1.0
EOF

echo "COLORSCHEME: setting kitty font"
# NOTE: remember to include $KITTY_FONT_FILE in kitty config file
cat << EOF > $KITTY_FONT_FILE
font_family      $KITTY_FONT_1
italic_font      $KITTY_FONT_2
bold_font        $KITTY_FONT_3
bold_italic_font $KITTY_FONT_4

font_size $KITTY_FONT_SIZE
EOF

# iterm2 colors file
# TODO: make this faster! cache?
echo "COLORSCHEME: setting iterm2 colors"
source "$UTILS_FILE"

JQQUERY=""
iterm2colorconversion () {
  RGB=$(hex2rgb $2)
  R=$(echo $RGB | cut -d : -f 1)
  G=$(echo $RGB | cut -d : -f 2)
  B=$(echo $RGB | cut -d : -f 3)
  if [ -z "$JQQUERY" ]; then
    JQQUERY=".Profiles[0][\"$1\"] = { \"Red Component\": $R , \"Green Component\": $G, \"Blue Component\": $B, \"Color Space\": \"sRGB\" }"
  else
    JQQUERY="$JQQUERY | .Profiles[0][\"$1\"] = { \"Red Component\": $R , \"Green Component\": $G, \"Blue Component\": $B, \"Color Space\": \"sRGB\" }"
  fi
}

iterm2colorconversion "Ansi 0 Color" $BLACK
iterm2colorconversion "Ansi 1 Color" $BRIGHT_RED
iterm2colorconversion "Ansi 2 Color" $BRIGHT_GREEN
iterm2colorconversion "Ansi 3 Color" $BRIGHT_YELLOW
iterm2colorconversion "Ansi 4 Color" $BRIGHT_BLUE
iterm2colorconversion "Ansi 5 Color" $BRIGHT_PURPLE
iterm2colorconversion "Ansi 6 Color" $BRIGHT_AQUA
iterm2colorconversion "Ansi 7 Color" $GREY3
iterm2colorconversion "Ansi 8 Color" $GREY1
iterm2colorconversion "Ansi 9 Color" $NEUTRAL_RED
iterm2colorconversion "Ansi 10 Color" $NEUTRAL_GREEN
iterm2colorconversion "Ansi 11 Color" $NEUTRAL_YELLOW
iterm2colorconversion "Ansi 12 Color" $NEUTRAL_BLUE
iterm2colorconversion "Ansi 13 Color" $NEUTRAL_PURPLE
iterm2colorconversion "Ansi 14 Color" $NEUTRAL_AQUA
iterm2colorconversion "Ansi 15 Color" $WHITE
iterm2colorconversion "Foreground Color" $WHITE
iterm2colorconversion "Background Color" $BLACK
iterm2colorconversion "Selection Color" $WHITE
iterm2colorconversion "Selected Text Color" $BLACK
iterm2colorconversion "Cursor Color" $WHITE
iterm2colorconversion "Cursor Text Color" $BLACK

TMPFILE=$(mktemp)
cp "$ITERM_CONFIG_BASE_FILE" "$TMPFILE" &&
jq "$JQQUERY" "$TMPFILE" > "$ITERM_CONFIG_FILE" &&
rm -f -- "$TMPFILE"

# polybar: set colors file
echo "COLORSCHEME: setting polybar colors"
cat << EOF > $POLYBAR_COLORS_FILE
[colors]
blackTr = $BLACK_TR
black   = $BLACK
grey0   = $GREY0
grey1   = $GREY1
grey2   = $GREY2
grey3   = $GREY3
grey4   = $GREY4
white   = $WHITE
blue0   = $NEUTRAL_BLUE
blue1   = $BRIGHT_BLUE
red0    = $NEUTRAL_RED
red1    = $BRIGHT_RED
orange0 = $NEUTRAL_ORANGE
orange1 = $BRIGHT_ORANGE
yellow0 = $NEUTRAL_YELLOW
yellow1 = $BRIGHT_YELLOW
green0  = $NEUTRAL_GREEN
green1  = $BRIGHT_GREEN
purple0 = $NEUTRAL_PURPLE
purple1 = $BRIGHT_PURPLE
cyan0   = $NEUTRAL_AQUA
cyan1   = $BRIGHT_AQUA

accent  = $ACCENT
accent-light = $ACCENT

foreground = \${self.white}
background = \${self.blackTr}
alert = \${self.red0}
EOF

echo "COLORSCHEME: setting polybar font"
cat << EOF > $POLYBAR_FONT_FILE
[font]
font_0 = $POLYBAR_FONT_0
font_1 = $POLYBAR_FONT_1
font_2 = $POLYBAR_FONT_2
EOF

# sketchybar: set colors file
echo "COLORSCHEME: setting sketchybar colors"
cat << EOF > $SKETCHYBAR_COLORS_FILE
#!/bin/sh

BLACKTR="$BLACK_TR"
BLACK="$BLACK"
GREY0="$GREY0"
GREY1="$GREY1"
GREY2="$GREY2"
GREY3="$GREY3"
GREY4="$GREY4"
WHITE="$WHITE"
BLUE0="$NEUTRAL_BLUE"
BLUE1="$BRIGHT_BLUE"
RED0="$NEUTRAL_RED"
RED1="$BRIGHT_RED"
ORANGE0="$NEUTRAL_ORANGE"
ORANGE1="$BRIGHT_ORANGE"
YELLOW0="$NEUTRAL_YELLOW"
YELLOW1="$BRIGHT_YELLOW"
GREEN0="$NEUTRAL_GREEN"
GREEN1="$BRIGHT_GREEN"
PURPLE0="$NEUTRAL_PURPLE"
PURPLE1="$BRIGHT_PURPLE"
CYAN0="$NEUTRAL_AQUA"
CYAN1="$BRIGHT_AQUA"
ACCENT="$ACCENT"
EOF

echo "COLORSCHEME: setting sketchybar font"
cat << EOF > $SKETCHYBAR_FONT_FILE
FONT="$SKETCHYBAR_FONT"
EOF

# i3: set colors file
echo "COLORSCHEME: setting i3 colors"
cat << EOF > $I3_COLORS_FILE
# Window borders
# class                 border  backgr. text    indicator child_border
client.focused          $BRIGHT_AQUA $NEUTRAL_AQUA $WHITE $ACCENT   $ACCENT
client.focused_inactive #333333 #5f676a $WHITE #484e50 #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e #222222
client.urgent           #2f343a $NEUTRAL_RED $WHITE $NEUTRAL_RED $NEUTRAL_RED
client.placeholder      #000000 #0c0c0c $WHITE #000000 #0c0c0c
client.background       $WHITE

# vim:filetype=i3config
EOF

echo "COLORSCHEME: setting i3 font"
cat << EOF > $I3_FONT_FILE
# Font for window titles.
font $I3_FONT

# vim:filetype=i3config
EOF

# yabai set colors file
echo "COLORSCHEME: setting yabai colors"
cat << EOF > $YABAI_COLORS_FILE
#!/bin/sh

BLACKTR="$BLACK_TR"
BLACK="$BLACK"
GREY0="$GREY0"
GREY1="$GREY1"
GREY2="$GREY2"
GREY3="$GREY3"
GREY4="$GREY4"
WHITE="$WHITE"
BLUE0="$NEUTRAL_BLUE"
BLUE1="$BRIGHT_BLUE"
RED0="$NEUTRAL_RED"
RED1="$BRIGHT_RED"
ORANGE0="$NEUTRAL_ORANGE"
ORANGE1="$BRIGHT_ORANGE"
YELLOW0="$NEUTRAL_YELLOW"
YELLOW1="$BRIGHT_YELLOW"
GREEN0="$NEUTRAL_GREEN"
GREEN1="$BRIGHT_GREEN"
PURPLE0="$NEUTRAL_PURPLE"
PURPLE1="$BRIGHT_PURPLE"
CYAN0="$NEUTRAL_AQUA"
CYAN1="$BRIGHT_AQUA"
ACCENT="$ACCENT"
EOF

# nvim: set colors file
echo "COLORSCHEME: setting nvim colors"
cat << EOF > $NVIM_COLORS_FILE
return {
  theme          = "$THEME",
  mode           = "$MODE",
  black          = "$BLACK",
  grey0          = "$GREY0",
  grey1          = "$GREY1",
  grey2          = "$GREY2",
  grey3          = "$GREY3",
  grey4          = "$GREY4",
  grey5          = "$GREY5",
  white          = "$WHITE",
  bright_red     = "$BRIGHT_RED",
  neutral_red    = "$NEUTRAL_RED",
  faded_red      = "$FADED_RED",
  bright_green   = "$BRIGHT_GREEN",
  neutral_green  = "$NEUTRAL_GREEN",
  faded_green    = "$FADED_GREEN",
  bright_yellow  = "$BRIGHT_YELLOW",
  neutral_yellow = "$NEUTRAL_YELLOW",
  faded_yellow   = "$FADED_YELLOW",
  bright_blue    = "$BRIGHT_BLUE",
  neutral_blue   = "$NEUTRAL_BLUE",
  faded_blue     = "$FADED_BLUE",
  bright_purple  = "$BRIGHT_PURPLE",
  neutral_purple = "$NEUTRAL_PURPLE",
  faded_purple   = "$FADED_PURPLE",
  bright_aqua    = "$BRIGHT_AQUA",
  neutral_aqua   = "$NEUTRAL_AQUA",
  faded_aqua     = "$FADED_AQUA",
  bright_orange  = "$BRIGHT_ORANGE",
  neutral_orange = "$NEUTRAL_ORANGE",
  faded_orange   = "$FADED_ORANGE",
}
EOF

# rofi: set colors file
echo "COLORSCHEME: setting rofi colors"
cat << EOF > $ROFI_COLORS_FILE
* {
  al:       $BLACK;
  bg:       $GREY0;
  se:       $GREY0;
  fg:       $WHITE;
  ac:       $ACCENT;
  red:      $BRIGHT_RED;
  green:    $BRIGHT_GREEN;
  yellow:   $BRIGHT_YELLOW;
  blue:     $BRIGHT_BLUE;
  purple:   $BRIGHT_PURPLE;
  aqua:     $BRIGHT_AQUA;
}
EOF

echo "COLORSCHEME: setting rofi font"
cat << EOF > $ROFI_FONT_FILE
configuration {
  font: "$ROFI_FONT";
}
EOF

# qutebrowser: set theme
echo "COLORSCHEME: setting qutebrowser colors"
cat << EOF > $QUTEBROWSER_COLORS_FILE
MODE           = "$MODE"
BLACK          = "$BLACK"
GREY0          = "$GREY0"
GREY1          = "$GREY1"
GREY2          = "$GREY2"
GREY3          = "$GREY3"
GREY4          = "$GREY4"
GREY5          = "$GREY5"
WHITE          = "$WHITE"
BRIGHT_RED     = "$BRIGHT_RED"
NEUTRAL_RED    = "$NEUTRAL_RED"
FADED_RED      = "$FADED_RED"
BRIGHT_GREEN   = "$BRIGHT_GREEN"
NEUTRAL_GREEN  = "$NEUTRAL_GREEN"
FADED_GREEN    = "$FADED_GREEN"
BRIGHT_YELLOW  = "$BRIGHT_YELLOW"
NEUTRAL_YELLOW = "$NEUTRAL_YELLOW"
FADED_YELLOW   = "$FADED_YELLOW"
BRIGHT_BLUE    = "$BRIGHT_BLUE"
NEUTRAL_BLUE   = "$NEUTRAL_BLUE"
FADED_BLUE     = "$FADED_BLUE"
BRIGHT_PURPLE  = "$BRIGHT_PURPLE"
NEUTRAL_PURPLE = "$NEUTRAL_PURPLE"
FADED_PURPLE   = "$FADED_PURPLE"
BRIGHT_AQUA    = "$BRIGHT_AQUA"
NEUTRAL_AQUA   = "$NEUTRAL_AQUA"
FADED_AQUA     = "$FADED_AQUA"
BRIGHT_ORANGE  = "$BRIGHT_ORANGE"
NEUTRAL_ORANGE = "$NEUTRAL_ORANGE"
FADED_ORANGE   = "$FADED_ORANGE"
EOF

echo "COLORSCHEME: setting qutebrowser font"
cat << EOF > $QUTEBROWSER_FONT_FILE
# fonts
FONT_SIZE = $QUTEBROWSER_FONT_SIZE
MONO_FONT = '$QUTEBROWSER_MONO_FONT'
REGULAR_FONT = '$QUTEBROWSER_REGULAR_FONT'
EOF

# razerkbd: set theme
echo "COLORSCHEME: setting razerkbd colors"
cat << EOF > $RAZERKBD_COLORS_FILE
MODE           = "$MODE"
BLACK          = "$BLACK"
GREY0          = "$GREY0"
GREY1          = "$GREY1"
GREY2          = "$GREY2"
GREY3          = "$GREY3"
GREY4          = "$GREY4"
GREY5          = "$GREY5"
WHITE          = "$WHITE"
BRIGHT_RED     = "$BRIGHT_RED"
NEUTRAL_RED    = "$NEUTRAL_RED"
FADED_RED      = "$FADED_RED"
BRIGHT_GREEN   = "$BRIGHT_GREEN"
NEUTRAL_GREEN  = "$NEUTRAL_GREEN"
FADED_GREEN    = "$FADED_GREEN"
BRIGHT_YELLOW  = "$BRIGHT_YELLOW"
NEUTRAL_YELLOW = "$NEUTRAL_YELLOW"
FADED_YELLOW   = "$FADED_YELLOW"
BRIGHT_BLUE    = "$BRIGHT_BLUE"
NEUTRAL_BLUE   = "$NEUTRAL_BLUE"
FADED_BLUE     = "$FADED_BLUE"
BRIGHT_PURPLE  = "$BRIGHT_PURPLE"
NEUTRAL_PURPLE = "$NEUTRAL_PURPLE"
FADED_PURPLE   = "$FADED_PURPLE"
BRIGHT_AQUA    = "$BRIGHT_AQUA"
NEUTRAL_AQUA   = "$NEUTRAL_AQUA"
FADED_AQUA     = "$FADED_AQUA"
BRIGHT_ORANGE  = "$BRIGHT_ORANGE"
NEUTRAL_ORANGE = "$NEUTRAL_ORANGE"
FADED_ORANGE   = "$FADED_ORANGE"
EOF

# reload dunst
echo "COLORSCHEME: reloading dunst"
pkill dunst && dunst 1>/dev/null &

# reload xborders
echo "COLORSCHEME: reloading xborders"
/usr/local/bin/reborder

# reload kitty
echo "COLORSCHEME: reloading kitty"
killall -SIGUSR1 kitty

# reload i3 config
echo "COLORSCHEME: reloading i3"
i3 restart

# reload neovim
echo "COLORSCHEME: reloading neovim"
NVIM_SERVER="/tmp/nvim-server.pipe"
if [ -e $NVIM_SERVER ]; then
  NVIM=$(which nvim)
  # call reload function in nvim
  # NOTE: this function needs to exist
  $NVIM --server $NVIM_SERVER --remote-send ":lua reload_config()<CR>" & 2> /dev/null
else
  notify "$APPNAME" \
    "nvim server pipe not found at $NVIM_SERVER. No neovim instance is probably running. Skipping neovim theme..."
fi

# reload razerkbd
$HOME/.config/razerkbd/razerkbd

# reload polybar
echo "COLORSCHEME: reloading polybar"
# TODO: find a way to check whether the name for the polybar bar exists
POLYBAR=$(which polybar)
pkill polybar && $POLYBAR mushfiq &

# reload qutebrowser
echo "COLORSCHEME: reloading qutebrowser"
qutebrowser ":restart"

UNAME=$(uname -s)
if [ $UNAME = "Darwin" ]; then
  # reload sketchybar
  echo "COLORSCHEME: reloading sketchybar"
  brew services restart sketchybar

  # reload yabai
  echo "COLORSCHEME: reloading yabai"
  brew services restart yabai

  # on MacOS, turn dark mode on/off
  echo "COLORSCHEME: setting MacOS theme to $MODE mode"
  if [ $MODE = "light" ]; then
    osascript -e 'tell app "System Events" to tell appearance preferences to set dark mode to false'
  else
    osascript -e 'tell app "System Events" to tell appearance preferences to set dark mode to true'
  fi
fi

# TODO: add error handling for all dependencies
