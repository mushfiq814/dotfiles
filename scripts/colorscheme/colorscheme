#!/bin/bash
# shellcheck source-path=scripts/colorscheme

# TODO: add check for all color values to exist
# TODO: add error handling for all dependencies

# paths for config files
COLORS_DIR="$HOME/dotfiles/scripts/colorscheme/colors"

# source env file (for environment variables)
# shellcheck source=../../.env
source "$HOME/dotfiles/.env"

# source utils file (for helper functions)
# shellcheck source=utils
source "$HOME/dotfiles/scripts/colorscheme/utils"

if [ "$#" -gt 0 ]; then
  LAUNCHER_CMD="$1"
else
  LAUNCHER_CMD="fzf"
  if command -v "rofi" &> /dev/null
  then
    LAUNCHER_CMD="rofi -dmenu"
  elif command -v "choose" &> /dev/null
  then
    LAUNCHER_CMD="choose"
  fi
fi

# show list of available colorschemes
quit_on_file_dne "$COLORS_DIR"
THEME=$(for file in "$COLORS_DIR"/*; do
  basename "$file" .json;
done | $LAUNCHER_CMD)
quit_on_error "Error with selecting colorscheme. Aborting..."

# show list of available accents
ACCENT_KEY=$(echo -e "RED\nGREEN\nYELLOW\nBLUE\nPURPLE\nAQUA\nORANGE" | $LAUNCHER_CMD)
quit_on_error "Error with selecting accent color. Aborting..."

# get colors from desired colorscheme
THEME_FILE="$COLORS_DIR/$THEME"
# shellcheck source=colors/debug
source "$THEME_FILE"
quit_on_error "colors file for $THEME not found! Aborting..."

# get accent colors based off the them file
FADED_ACCENT=$(eval echo \$"FADED_$ACCENT_KEY")
NEUTRAL_ACCENT=$(eval echo \$"NEUTRAL_$ACCENT_KEY")
ACCENT=$NEUTRAL_ACCENT
BRIGHT_ACCENT=$(eval echo \$"BRIGHT_$ACCENT_KEY")

BLACK_TR="${BLACK:1}"
if [ "$MODE" = "light" ]; then
  # get transparent black color in AARRGGBB format
  # less transparent for light theme
  BLACK_TR="#DD$BLACK_TR"
  # background opacity
  OPACITY="0.95"
else
  BLACK_TR="#90$BLACK_TR"
  OPACITY="0.80"
fi

if [[ $ENABLE_CHOOSE -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/choose" "$THEME_FILE" "$ACCENT"; fi
if [[ $ENABLE_DUNST -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/dunst" "$THEME_FILE" "$ACCENT"; fi
if [[ $ENABLE_I3 -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/i3" "$THEME_FILE" "$ACCENT"; fi
if [[ $ENABLE_ITERM -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/iterm" "$THEME_FILE" "$OPACITY"; fi
if [[ $ENABLE_KITTY -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/kitty" "$THEME_FILE" "$ACCENT" "$OPACITY"; fi
if [[ $ENABLE_MACOSTHEME -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/macostheme" "$MODE"; fi
if [[ $ENABLE_NVIM -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/nvim" "$THEME_FILE" "$ACCENT"; fi
if [[ $ENABLE_POLYBAR -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/polybar" "$THEME_FILE" "$ACCENT" "$BLACK_TR"; fi
if [[ $ENABLE_QUTEBROWSER -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/qutebrowser" "$THEME_FILE"; fi
if [[ $ENABLE_RAZERKBD -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/razerkbd" "$THEME_FILE"; fi
if [[ $ENABLE_ROFI -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/rofi" "$THEME_FILE" "$ACCENT"; fi
if [[ $ENABLE_SKETCHYBAR -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/sketchybar" "$THEME_FILE" "$ACCENT" "$BLACK_TR"; fi
if [[ $ENABLE_TERMUX -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/termux" "$THEME_FILE"; fi
if [[ $ENABLE_TMUX -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/tmux" "$THEME_FILE" "$BRIGHT_ACCENT" "$NEUTRAL_ACCENT" "$FADED_ACCENT"; fi
if [[ $ENABLE_XBORDERS -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/xborders" "$ACCENT"; fi
if [[ $ENABLE_YABAI -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/yabai" "$THEME_FILE" "$ACCENT" "$BLACK_TR"; fi
if [[ $ENABLE_ZATHURA -eq 1 ]]; then "$HOME/dotfiles/scripts/colorscheme/programs/zathura" "$THEME_FILE" "$ACCENT"; fi
