#!/bin/sh
# WSL PowerShell Music Player Initialization Script
# Created By: Mushfiq Mahmud
# February 2021
# IMPORANT NOTE: Currently the script does not work with filenames
# containing whitespace.

# filepath variables
nowplaying=$HOME/dotfiles/scripts/wsl-musicplayer/now-playing.txt
psscript=$HOME/dotfiles/scripts/wsl-musicplayer/player.ps1

stop_music () {
	# Kill any previous powershell.exe sessions
	pkill powershell.exe
}

# Playback Functions
play_music () {
	echo "Playing...$1"

	# Stop anny existing music sessions
	stop_music

	# Get duration of song passed in as argument
	duration=$(exiftool $1 | grep Duration | sed 's/^.*\([0-9]\+:[0-9]\+:[0-9]\+\).*$/\1/g')

	# Extract hours, minutes and seconds from duration
	hr=$(echo $duration | cut -d : -f 1)
	mn=$(echo $duration | cut -d : -f 2)
	sc=$(echo $duration | cut -d : -f 3)

	# Calculate total seconds and add padding to ensure song finishes
	padding=5
	seconds=$(( 3600 * $hr + 60 * $mn + $sc + $padding ))

	# Format song for windows filepath
	song="\"$(realpath $1 | sed 's/\//\\/g' | sed 's/\\mnt\\\(c\)\\/\U\1:\\/g')\""

	# Write song info to file
	artist=$(mid3v2 $1 | grep TPE1 | sed 's/TPE1=\(.*\)/\1/g')
	title=$(mid3v2 $1 | grep TIT2 | sed 's/TIT2=\(.*\)/\1/g')
	echo "$artist - $title" > $nowplaying

	# Initiate powershell script in background
	powershell.exe $psscript $song $seconds > /dev/null 2>&1 & echo $! > run.pid
}

pause_music () {
	echo "Pausing not supported yet"
}

shuffle_music () {
	echo "Shuffling not supported yet"
}

# Parse flags and arguments
while test $# -gt 0; do
	case "$1" in
		'--play')
			shift
			file=$1
			play_music $1
			shift
			continue
		;;
		'--pause')
			pause_music
			shift 1
			continue
		;;
		'--stop')
			stop_music
			shift 1
			continue
		;;
		'--shuffle')
			shuffle_music
			shift 1
			continue
		;;
		'--')
			shift
			break
		;;
		*)
			echo "$1 not available"
			exit 1
		;;
	esac
done

